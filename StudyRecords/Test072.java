/* ================================================
■■■ 지역변수와 전역변수 ■■■
=================================================== 
■■■ 클래스와 인스턴스 ■■■ 
=================================================== 

자바는 "객체 지향 언어"
"객체"란? 
- 사전적 의미 : 물건 또는 대상
- 객체 지향 프로그래밍 : 객체 중심의 프로그래밍

'나는' '과일장수'에게서 '두 개'의 '사과'를 '구매했다'
(객체)   (객체)        (데이터)   (객체)  (행위, 기능)

※ 객체지향 프로그램밍에서는 나, 과일장수, 사과라는 객체를 등장시켜서 두 개의 사과 구매라는 행위를 실체화한다.

객체를 구성하는 것은 속성과 기능이다.

과일장수는 과일을 판매한다. (행위)
과일 장수는 사과20개, 오렌지 10개를 보유하고 있다.(상태)
과일 장수의 과일 판매 수익은 50000원이다. (상태)

보유하고 있는 사과의 수 : int numOfApple;
판매 수익 : int myMoney;

클래스(class)라는 틀 기반의 객체 생성
--------------------------------------------------------------------------
class FruitSeller
{
	int numofApple(사과 갯수) = 20;																: 변수 선언	
	int muMoney(지갑의 돈) = 0;																	: 
	
	public int saleApple(int money)				- 사과 구매액이 메소드의 인자로 전달				: 
	{																								:
		int num(갯수) = money/1000;(돈)			- 사과가 개당 1000원이라 가정						:메소드 선언
		numOfApple(사과 갯수) -= num;(갯수)		- 사과의 수가 줄어들고,								:
		myMoney(지갑의 돈) += money;(돈)		- 판매 수익이 증가한다.								:
		return num;(갯수)						- 실제 구매가 발생한 사과의 수를 반환				:
	}
}
--------------------------------------------------------------------------
FruitSeller 라는 이름을 가진 틀 정의

 클래스 = 붕어빵 틀
 
 인스턴스 생성 = 객체 생성 = 붕어빵

===================================================
■■■ 지역변수와 전역변수 ■■■
=================================================== 

// Test073.java 와 비교

※ 지역 변수는 초기화 과정을 거치지 않으면 사용할 수 없다.
   (→ 즉, 자바가 자동으로 초기화를 수행해 주거나 하지 않는다.)

*/

public class Test072
{
	// 클래스의 영역
	
	public static void main(String[] args)
	{
		// 메소드의 영역(main() 메소드)
		
		int n;
		// 선언 후 초기화 과정을 거치지 않은 상태
		
		// System.out.println("n : " + n);	
		// → 에러 발생(컴파일 에러)
		// variable n might not have been initialized
		// 지역 변수 n에 접근하여 그 값을 출력하고자 하는 구문
	}
}